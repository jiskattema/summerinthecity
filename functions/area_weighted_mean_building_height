-- Area Weighted Mean Building Height HGT_URB2D URB_PARAM=94
-- definition of building a bit arbitrary (ie. the TOP10NL objects)
-- A grid cell can 'cut' a building in parts. The parts in the same cell are still considred one building.
-- Its height is then the average over OHN of the intersecting parts.
--  
-- arguments: pixel, geometry    grid cell to analyze
-- 
-- depends on: gebouw, the TOP10NL table for buildings
--             ohn, the object height map, relative to maaiveld (ie. building height)
--
-- returns: mean building height [m], always >= 0
-- 
CREATE OR REPLACE FUNCTION area_weighted_building_height(pixel geometry) RETURNS real
AS $$
DECLARE
    rrid   integer;
    srid   integer;
    result real;
BEGIN

    -- get the correct SRIDs
    SELECT ST_SRID(rast)         FROM ohn     LIMIT 1 INTO rrid ;  
    SELECT ST_SRID(wkb_geometry) FROM gebouw  LIMIT 1 INTO srid ;  

    SELECT
        mean
    FROM
        (
        SELECT
            (ST_SummaryStats(ST_Union(g))).*
        FROM
            (
            SELECT
                ST_Union( ST_Clip(rast, geometry_rrid, TRUE) ) AS g
            FROM
                (
                SELECT
                    ogc_fid,
                    ST_Transform( ST_Intersection(ST_Transform(pixel,srid), wkb_geometry), rrid)  AS geometry_rrid
                FROM
                    gebouw
                WHERE
                    (ST_Transform(pixel,srid) && gebouw.wkb_geometry) AND ST_Intersects( wkb_geometry, ST_Transform(pixel,srid) )
                ) AS foo,
                ohn
            WHERE
               (rast && geometry_rrid) AND ST_Intersects( rast, geometry_rrid )
            GROUP BY
                ogc_fid
            ) AS foo
        WHERE
            g IS NOT NULL AND ST_IsEmpty(g) = FALSE
        ) AS foo
    WHERE
        mean > 0 AND count > 0
    INTO
        result;

    -- Keep results meaningfull
    IF result > 0 THEN
        RETURN result;
    ELSE
        RETURN 0;
    END IF;
END;
$$ LANGUAGE plpgsql;
